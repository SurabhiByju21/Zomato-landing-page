{"ast":null,"code":"import axios from \"axios\"; // redux types\n\nimport { GET_CART, ADD_TO_CART, DELETE_FROM_CART, INCRETE_QUANTITY, DECRETE_QUANTITY } from \"./cart.type\";\nexport const getCart = () => async dispatch => {\n  try {\n    let cartData = {\n      cart: []\n    };\n\n    if (localStorage.zomatoCart) {\n      const {\n        cart\n      } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\n      cartData.cart = cart;\n    }\n\n    return dispatch({\n      type: GET_CART,\n      payload: cartData.cart\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};\nexport const addToCart = newFood => async dispatch => {\n  try {\n    let cartData = {\n      cart: []\n    };\n\n    if (localStorage.zomatoCart) {\n      const {\n        cart\n      } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\n      cartData.cart = cart;\n    }\n\n    cartData.cart.push(newFood);\n    localStorage.setItem(\"zomatoCart\", JSON.stringify({\n      cart: cartData.cart\n    }));\n    return dispatch({\n      type: ADD_TO_CART,\n      payload: cartData.cart\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};\nexport const DeleteCart = foodId => async dispatch => {\n  try {\n    let cartData = {\n      cart: []\n    };\n\n    if (localStorage.zomatoCart) {\n      const {\n        cart\n      } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\n      cartData.cart = cart;\n    }\n\n    if (!cartData.cart.length) {\n      return dispatch({\n        type: \"ERROR\",\n        payload: \"Cart is empty\"\n      });\n    }\n\n    cartData.cart = cartData.cart.filter(_ref => {\n      let {\n        _id\n      } = _ref;\n      return _id !== foodId;\n    });\n    localStorage.setItem(\"zomatoCart\", JSON.stringify({\n      cart: cartData.cart\n    }));\n    return dispatch({\n      type: DELETE_FROM_CART,\n      payload: cartData.cart\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};\nexport const increteQuantity = foodId => async dispatch => {\n  try {\n    let cartData = {\n      cart: []\n    };\n\n    if (localStorage.zomatoCart) {\n      const {\n        cart\n      } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\n      cartData.cart = cart;\n    }\n\n    cartData.cart = cartData.cart.map(food => food._id === foodId ? { ...food,\n      quantity: food.quantity + 1,\n      totalPrice: food.price * (food.quantity + 1)\n    } : food);\n    localStorage.setItem(\"zomatoCart\", JSON.stringify({\n      cart: cartData.cart\n    }));\n    return dispatch({\n      type: INCRETE_QUANTITY,\n      payload: cartData.cart\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};\nexport const decrementQuantity = foodId => async dispatch => {\n  try {\n    let cartData = {\n      cart: []\n    };\n\n    if (localStorage.zomatoCart) {\n      const {\n        cart\n      } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\n      cartData.cart = cart;\n    }\n\n    cartData.cart = cartData.cart.map(food => food._id === foodId ? { ...food,\n      quantity: food.quantity - 1,\n      totalPrice: food.price * (food.quantity - 1)\n    } : food);\n    localStorage.setItem(\"zomatoCart\", JSON.stringify({\n      cart: cartData.cart\n    }));\n    return dispatch({\n      type: DECRETE_QUANTITY,\n      payload: cartData.cart\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/SURABHI/Desktop/Shapeai/zomato-master clone/client/src/redux/reducers/cart/cart.action.js"],"names":["axios","GET_CART","ADD_TO_CART","DELETE_FROM_CART","INCRETE_QUANTITY","DECRETE_QUANTITY","getCart","dispatch","cartData","cart","localStorage","zomatoCart","JSON","parse","getItem","type","payload","error","addToCart","newFood","push","setItem","stringify","DeleteCart","foodId","length","filter","_id","increteQuantity","map","food","quantity","totalPrice","price","decrementQuantity"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\n// redux types\r\nimport {\r\n  GET_CART,\r\n  ADD_TO_CART,\r\n  DELETE_FROM_CART,\r\n  INCRETE_QUANTITY,\r\n  DECRETE_QUANTITY,\r\n} from \"./cart.type\";\r\n\r\nexport const getCart = () => async (dispatch) => {\r\n  try {\r\n    let cartData = { cart: [] };\r\n\r\n    if (localStorage.zomatoCart) {\r\n      const { cart } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\r\n      cartData.cart = cart;\r\n    }\r\n\r\n    return dispatch({ type: GET_CART, payload: cartData.cart });\r\n  } catch (error) {\r\n    dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};\r\n\r\nexport const addToCart = (newFood) => async (dispatch) => {\r\n  try {\r\n    let cartData = { cart: [] };\r\n\r\n    if (localStorage.zomatoCart) {\r\n      const { cart } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\r\n      cartData.cart = cart;\r\n    }\r\n\r\n    cartData.cart.push(newFood);\r\n\r\n    localStorage.setItem(\"zomatoCart\", JSON.stringify({ cart: cartData.cart }));\r\n\r\n    return dispatch({ type: ADD_TO_CART, payload: cartData.cart });\r\n  } catch (error) {\r\n    dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};\r\n\r\nexport const DeleteCart = (foodId) => async (dispatch) => {\r\n  try {\r\n    let cartData = { cart: [] };\r\n\r\n    if (localStorage.zomatoCart) {\r\n      const { cart } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\r\n      cartData.cart = cart;\r\n    }\r\n\r\n    if (!cartData.cart.length) {\r\n      return dispatch({ type: \"ERROR\", payload: \"Cart is empty\" });\r\n    }\r\n\r\n    cartData.cart = cartData.cart.filter(({ _id }) => _id !== foodId);\r\n\r\n    localStorage.setItem(\"zomatoCart\", JSON.stringify({ cart: cartData.cart }));\r\n\r\n    return dispatch({ type: DELETE_FROM_CART, payload: cartData.cart });\r\n  } catch (error) {\r\n    dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};\r\n\r\nexport const increteQuantity = (foodId) => async (dispatch) => {\r\n  try {\r\n    let cartData = { cart: [] };\r\n\r\n    if (localStorage.zomatoCart) {\r\n      const { cart } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\r\n      cartData.cart = cart;\r\n    }\r\n\r\n    cartData.cart = cartData.cart.map((food) =>\r\n      food._id === foodId\r\n        ? {\r\n            ...food,\r\n            quantity: food.quantity + 1,\r\n            totalPrice: food.price * (food.quantity + 1),\r\n          }\r\n        : food\r\n    );\r\n\r\n    localStorage.setItem(\"zomatoCart\", JSON.stringify({ cart: cartData.cart }));\r\n\r\n    return dispatch({ type: INCRETE_QUANTITY, payload: cartData.cart });\r\n  } catch (error) {\r\n    dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};\r\n\r\nexport const decrementQuantity = (foodId) => async (dispatch) => {\r\n  try {\r\n    let cartData = { cart: [] };\r\n\r\n    if (localStorage.zomatoCart) {\r\n      const { cart } = JSON.parse(localStorage.getItem(\"zomatoCart\"));\r\n      cartData.cart = cart;\r\n    }\r\n\r\n    cartData.cart = cartData.cart.map((food) =>\r\n      food._id === foodId\r\n        ? {\r\n            ...food,\r\n            quantity: food.quantity - 1,\r\n            totalPrice: food.price * (food.quantity - 1),\r\n          }\r\n        : food\r\n    );\r\n\r\n    localStorage.setItem(\"zomatoCart\", JSON.stringify({ cart: cartData.cart }));\r\n\r\n    return dispatch({ type: DECRETE_QUANTITY, payload: cartData.cart });\r\n  } catch (error) {\r\n    dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}