{"ast":null,"code":"import axios from \"axios\"; // redux types\n\nimport { SIGN_OUT, SIGN_IN, SIGN_UP, GOOGLE_AUTH } from \"./auth.type\"; // redux actions\n\nimport { clearUser } from \"../user/user.action\";\nexport const signIn = userData => async dispatch => {\n  try {\n    const User = await axios({\n      method: \"POST\",\n      url: `http://localhost:4000/auth/signin`,\n      data: {\n        credentials: userData\n      }\n    });\n    localStorage.setItem(\"zomatoUser\", JSON.stringify({\n      token: User.data.token\n    }));\n    window.location.reload();\n    return dispatch({\n      type: SIGN_IN,\n      payload: User.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};\nexport const signUp = userData => async dispatch => {\n  try {\n    const User = await axios({\n      method: \"POST\",\n      url: `http://localhost:4000/auth/signup`,\n      data: {\n        credentials: userData\n      }\n    });\n    localStorage.setItem(\"zomatoUser\", JSON.stringify({\n      token: User.data.token\n    }));\n    window.location.reload();\n    return dispatch({\n      type: SIGN_UP,\n      payload: User.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};\nexport const signOut = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"zomatoUser\");\n    clearUser();\n    window.location.href = \"http://localhost:3000/delivery\";\n    return dispatch({\n      type: SIGN_OUT,\n      payload: {}\n    });\n  } catch (error) {\n    return dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};\nexport const googleAuth = token => async dispatch => {\n  try {\n    localStorage.setItem(\"zomatoUser\", JSON.stringify({\n      token\n    }));\n    return dispatch({\n      type: GOOGLE_AUTH,\n      payload: {}\n    });\n  } catch (error) {\n    return dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/SURABHI/Desktop/Shapeai/zomato-master clone/client/src/redux/reducers/auth/auth.action.js"],"names":["axios","SIGN_OUT","SIGN_IN","SIGN_UP","GOOGLE_AUTH","clearUser","signIn","userData","dispatch","User","method","url","data","credentials","localStorage","setItem","JSON","stringify","token","window","location","reload","type","payload","error","signUp","signOut","removeItem","href","googleAuth"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\n// redux types\r\nimport { SIGN_OUT, SIGN_IN, SIGN_UP, GOOGLE_AUTH } from \"./auth.type\";\r\n\r\n// redux actions\r\nimport { clearUser } from \"../user/user.action\";\r\n\r\nexport const signIn = (userData) => async (dispatch) => {\r\n  try {\r\n    const User = await axios({\r\n      method: \"POST\",\r\n      url: `http://localhost:4000/auth/signin`,\r\n      data: { credentials: userData },\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"zomatoUser\",\r\n      JSON.stringify({ token: User.data.token })\r\n    );\r\n\r\n    window.location.reload();\r\n\r\n    return dispatch({ type: SIGN_IN, payload: User.data });\r\n  } catch (error) {\r\n    return dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};\r\n\r\nexport const signUp = (userData) => async (dispatch) => {\r\n  try {\r\n    const User = await axios({\r\n      method: \"POST\",\r\n      url: `http://localhost:4000/auth/signup`,\r\n      data: { credentials: userData },\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"zomatoUser\",\r\n      JSON.stringify({ token: User.data.token })\r\n    );\r\n\r\n    window.location.reload();\r\n\r\n    return dispatch({ type: SIGN_UP, payload: User.data });\r\n  } catch (error) {\r\n    return dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};\r\n\r\nexport const signOut = () => async (dispatch) => {\r\n  try {\r\n    localStorage.removeItem(\"zomatoUser\");\r\n    clearUser();\r\n    window.location.href = \"http://localhost:3000/delivery\";\r\n\r\n    return dispatch({ type: SIGN_OUT, payload: {} });\r\n  } catch (error) {\r\n    return dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};\r\n\r\nexport const googleAuth = (token) => async (dispatch) => {\r\n  try {\r\n    localStorage.setItem(\"zomatoUser\", JSON.stringify({ token }));\r\n\r\n    return dispatch({ type: GOOGLE_AUTH, payload: {} });\r\n  } catch (error) {\r\n    return dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}