{"ast":null,"code":"import axios from \"axios\"; // redux types\n\nimport { GET_USER, SELF, CLEAR_USER } from \"./user.type\";\nexport const getUser = _id => async dispatch => {\n  try {\n    const User = await axios({\n      method: \"GET\",\n      url: `http://localhost:4000/user/${_id}`\n    });\n    return dispatch({\n      type: GET_USER,\n      payload: User.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};\nexport const getMySelf = () => async dispatch => {\n  try {\n    const User = await axios({\n      method: \"GET\",\n      url: `http://localhost:4000/user/`\n    });\n    return dispatch({\n      type: SELF,\n      payload: User.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};\nexport const clearUser = () => async dispatch => {\n  try {\n    return dispatch({\n      type: CLEAR_USER,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ERROR\",\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/SURABHI/Desktop/Shapeai/zomato-master clone/client/src/redux/reducers/user/user.action.js"],"names":["axios","GET_USER","SELF","CLEAR_USER","getUser","_id","dispatch","User","method","url","type","payload","data","error","getMySelf","clearUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,UAAzB,QAA2C,aAA3C;AAEA,OAAO,MAAMC,OAAO,GAAIC,GAAD,IAAS,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMP,KAAK,CAAC;AACvBQ,MAAAA,MAAM,EAAE,KADe;AAEvBC,MAAAA,GAAG,EAAG,8BAA6BJ,GAAI;AAFhB,KAAD,CAAxB;AAKA,WAAOC,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAET,QAAR;AAAkBU,MAAAA,OAAO,EAAEJ,IAAI,CAACK;AAAhC,KAAD,CAAf;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEE;AAA1B,KAAD,CAAR;AACD;AACF,CAXM;AAaP,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACjD,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMP,KAAK,CAAC;AACvBQ,MAAAA,MAAM,EAAE,KADe;AAEvBC,MAAAA,GAAG,EAAG;AAFiB,KAAD,CAAxB;AAKA,WAAOH,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAER,IAAR;AAAcS,MAAAA,OAAO,EAAEJ,IAAI,CAACK;AAA5B,KAAD,CAAf;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEE;AAA1B,KAAD,CAAR;AACD;AACF,CAXM;AAaP,OAAO,MAAME,SAAS,GAAG,MAAM,MAAOT,QAAP,IAAoB;AACjD,MAAI;AACF,WAAOA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEP,UAAR;AAAoBQ,MAAAA,OAAO,EAAE;AAA7B,KAAD,CAAf;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEE;AAA1B,KAAD,CAAR;AACD;AACF,CANM","sourcesContent":["import axios from \"axios\";\r\n\r\n// redux types\r\nimport { GET_USER, SELF, CLEAR_USER } from \"./user.type\";\r\n\r\nexport const getUser = (_id) => async (dispatch) => {\r\n  try {\r\n    const User = await axios({\r\n      method: \"GET\",\r\n      url: `http://localhost:4000/user/${_id}`,\r\n    });\r\n\r\n    return dispatch({ type: GET_USER, payload: User.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};\r\n\r\nexport const getMySelf = () => async (dispatch) => {\r\n  try {\r\n    const User = await axios({\r\n      method: \"GET\",\r\n      url: `http://localhost:4000/user/`,\r\n    });\r\n\r\n    return dispatch({ type: SELF, payload: User.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};\r\n\r\nexport const clearUser = () => async (dispatch) => {\r\n  try {\r\n    return dispatch({ type: CLEAR_USER, payload: {} });\r\n  } catch (error) {\r\n    dispatch({ type: \"ERROR\", payload: error });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}